*** .hint
The variance is $E[X^2] - E[X]^2$
*** .explanation
```{r}
sum(x ^ 2 * p) - sum(x * p) ^ 2
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
plot(temp)
plot(x, p)
pot(x, p, type = "l")
plot(x, p, type = "l")
plot(x, p, type = "l", frame = FALSE)
library(UsingR)
install.packages("UsingR)")
install.packages("UsingR")
library(UsingR)
data(father.son)
x <- father.son$height
n <- length(x)
str(father.son)
hist(x)
x <- father.son$sheight
hist(x)
round(c(var(x), var(x)/n, sd(x), sd(x)/sqrt(n)), 2)
?pbinom()
pbinom(8, 9, 0.5, lower.tail = FALSE)
choose(10,9)*.5^9*(1-.5)^1
?qnorm()
qnorm(.95, mean=mu, sd=sd)
qnorm(.95)
pnorm(.95)
dnorm(1160, mean = 1020, sd=50, lower.tail=FALSE)
dnorm(1160, mean = 1020, sd=50)
pnorm(1160, mean = 1020, sd=50, lower.tail=FALSE)
pnorm(5, mean = 11, sd=2)
ppois(40, lambda = 45)
n <- 1000
means <- cumsum(rnorm(n))/(1:n)
plot(means)
means2 <- cumsum(sample(0:1, n, replace =TRUE))/(1:n)
plot(means2)
(mean(x) +c(-1, 1) *qnorm(0.975) * sd(x)/sqrt(length(x)))/12
y <- father.son$fheight
(mean(y) +c(-1, 1) *qnorm(0.975) * sd(y)/sqrt(length(y)))/12
(mean(y) +c(-1, 1) *qnorm(0.95) * sd(y)/sqrt(length(y)))/12
?qnorm()
qnorm(.975)
qnorm(1.96)
(mean(y) +c(-2, 2) *qnorm(0.95) * sd(y)/sqrt(length(y)))/12
(mean(y) +c(-2, 2) *qnorm(0.95) * sd(y)/sqrt(length(y)))
(mean(y) +c(-1, 1) *qnorm(0.95) * sd(y)/sqrt(length(y)))
a <- 10
tt <- 1
lambda <- a/tt
poisson.test(10, 60)$conf
poisson.test(10, 6)$conf
poisson.test(600, 60)$conf
pnorm(70, mean=80, sd=10, lower.tail=TRUE)
1100 + (1.645*75)
1100 + (1.645*7.5)
pbinom(4, 5, 0.5, lower.tail = FALSE)
pbinom(5, 5, 0.5, lower.tail = FALSE)
poisson.test(14, 1)$conf
poisson.test(16, 1)$conf
sqrt(1/12)
ppois(10, lambda=5*3, lower.tail=TRUE)
1*.5*(1-.5)
1/12
?choose
(choose(4,5)*.5^5*(1-.5)^1)
(choose(4,5)*.5^5*(1-.5)^1)
pbinom(4, 5, 0.5)
?binom
?pbinom
pbinom(4, 5, 0.5, lower.tail=TRUE, log.p=FALSE)
pbinom(5, 5, 0.5, lower.tail=TRUE, log.p=FALSE)
(choose(4,5)*(.5^5)*(1-.5)^1)
(choose(5,4)*(.5^5)*(1-.5)^1)
choose(4,5)
choose(5,4)
choose(5,4)*.5^4*(1-.5)^1
choose(5,5)*.5^5*(1-.5)^1
k <- 1000
xvals <- seq(-5, 5, length = k)
library(ggplot)
library(ggplot2)
my plot <- function(df){
d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
x = xvals,
dist = factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x=x, y=y))
g <- g+ geom_line(size=2, aes(color=dist))
g
}
source('~/.active-rstudio-document')
install.packages("manipulate)")
install.packages("manipulate")
library(manipulate)
source('~/.active-rstudio-document')
data(sleep)
head(sleep)
g1 <- sleep$extra[1:10]
g2 <- sleep$extra[11:20]
difference <- g2-g1
mn <- mean(difference)
s <- sd(difference)
n <- 10
mn + c(-1, 1) * qt(.975, n-1)*s/sqrt(n)
t.test(difference)
t.test(g2, g1, paired=TRUE)
t.test(extra~I(relevel(group, 2)), paired = TRUE, data=sleep)
library(datasets)
data(ChickWeight)
library(reshape2)
str(ChickWeight)
a <- 6/50
b <- 2*(13/50)
c <- 3*(31/50)
a++c
a
13/50
31/50
.12*.12
.12*.26
.12*.62
.26*.26
.26*.62
.62*.62
(.014*2)+(.031*3)+(.074*4)+(.014*3)+(.068*4)+(.161*5)+(.074*4)+(.068*5)+(.394*6)
1.8*130
234-290
(56+200+90)/(56+100+30)
21/6
c1 <- 1*(4/50)
c2 <- 2*(6/50)
c5 <- 5*(9/50)
c1+c2+c5
3.5-1.22
50-19
2.28*50
manipulate(plot(1:x), x=slider(1,100))
manipulate(plot(cars, xlim=c(0,x.max)), x.max=slider(15,25))
?manipulate()
data(longley)
manipulate(barplot(as.matrix(longley[,factor]), beside=TRUE, main=factor), factor=picker("GNP", "Unemployed", "Employed"))
str(longley)
manipulate(boxplot(Freq~Class, data=Titanic, outline=outline), outline=checkbox(FALSE, "Show outliers"))
manipulate(
plot(cars, xlim = c(0, x.max), type = type, ann = label),
x.max = slider(10, 25, step=5, initial = 25),
type = picker("Points" = "p", "Line" = "l", "Step" = "s"),
label = checkbox(TRUE, "Draw Labels"))
a <- 1200/5000
b <- 100/5000
c <- 3700/5000
(0*a)+(1*b)+(2*c)
610-180
(42*3)+(20*6)+(38*8)
610-120
(3*55)+(6*20)+(25*8)
.5^5
5^5
library(UsingR)
data(father.son)
t.test(father.son$sheight-father.son$fheight)
library(reshape2)
wideCW <- dcast(ChickWeight, Diet+Chick~Time, value.var="weight")
names(wideCW)[-(1:2)]<- paste("time", names(wideCW)[-1(1:2)], sep="")
names(wideCW)[-(1:2)]<- paste("time", names(wideCW)[-(1:2)], sep="")
library(dplyr)
install.packages("dplyr")
library(dplyr)
wideCW <- mutate(wideCW, gain = time21-time0)
head(ChickWeight)
head(wideCW)
wideCW14 <- subset(wideCW, Diet %in% c(1,4))
t.test(gain~Diet, paired=FALSE, var.equal=TRUE, data=wideCW14)
rexp(5,.2)
?rexp()
pexp(2, rate=1/3)
rexp(20,5)
t = rexp(600,5)
hist(t, freq = FALSE)
x <- seq(0, 1.5, .005)
pdf = dexp(x, 5)
lines(x, pdf)
sim <- rexp(40, rate=.2)
mean(sim)
mean(rexp(40, rate=.2))
means <- as.numeric()
for(i in 10){
means[i] <- mean(rexp(40, rate=.2))
}
means <- as.numeric()
for(i in 1:10){
means[i] <- mean(rexp(40, rate=.2))
}
hist(means)
means <- as.numeric()
for(i in 1:1000){
means[i] <- mean(rexp(40, rate=.2))
}
hist(means)
mean(means)
sd(means)
var(means)
hist(means, bin=100)
?hist()
hist(means, breaks=100)
hist(means, breaks=1000)
hist(means, breaks=50)
median(means)
mean(means)
hist(means, breaks=50)
lines(mean(means))
?lines()
hist(means, breaks=50)
abline(mean(means))
abline(x=mean(means))
abline(mean(means),)
?abline()
hist(means, breaks=50)
abline(mean(means),1)
abline(1, mean(means))
?abline()
hist(means, breaks=50)
abline(v=mean(means))
library(ggplot2)
qplot(means)
qplot(means, binwidth=50)
qplot(means, binwidth=.5)
qplot(means, binwidth=.5)
?qplot()
g <- ggplot(means)
obs <- 1:1000
df <- as.data.frame(obs=obs, means=means)
?as.data.frame()
?data.frame()
df <-  data.frame(obs=obs, means=means)
head(df)
g <- ggplot(df, aes(x=means)) +geom_historam(binwidth=.5)
g <- ggplot(df, aes(x=means)) +geom_histogram(binwidth=.5)
g
g <- ggplot(df, aes(x=means)) +geom_histogram(binwidth=.3)
g
g <- ggplot(df, aes(x=means)) +geom_histogram(binwidth=.1)
g
g <- ggplot(df, aes(x=means)) +geom_histogram(binwidth=.1, colour="black", fill ="white")
g
g + geom_vline(aes(xintercept=mean(means)), colour="red", size =1)
g + geom_vline(aes(xintercept=5), colour ="blue", size = 1)
g <- g + geom_vline(aes(xintercept=mean(means)), colour="red", size =1)
g
g <- g + geom_vline(aes(xintercept=5), colour ="blue", size = 1)
g
mean(means)
var(means)
var(means)*1/1000
?var()
st(means)
std(means)
sd(means)
var(means)/1000
1/(.2^2)
25/1000
str(means0)
str(means)
var(means)
.2^2
var(means)
g
nosim <- 1000
n <- 40
sd(apply(matrix(rnorm(nosim*n), nosim), 1, 5))
sd(apply(matrix(rnorm(nosim*n), nosim), 1, mean=5))
sd(apply(matrix(rnorm(nosim*n), nosim), 1, mean))
1/sqrt(n)
sd(apply(matrix(rexp(nosim*n), rate=0.2), nosim), 1, mean)
sd(apply(matrix( rexp(nosim * n, rate=0.2), nosim), 1, mean))
sd(means)
25/100
var(means)
25/40
x <- rnorm(1000, mean=5, sd=.80)
plot(x)
hist(x)
x <- rnorm(1000, mean=4.98, sd=.80)
y <- 1:1000
df2 <- data.frame(y=y, x=x)
df <- cbind(df, x)
str(df)
df <- (obs=obs, means=means)
df <- as.data.frame(cond=rep(1, 1000), means=means)
cond <- rep(1, 1000)
df <- as.data.frame(cond=cond, means=means)
df <- data.frame(cond=cond, means=means)
df <- data.frame(cond=rep(1, 1000), means=means)
rm(list=ls())
source('~/Documents/Coursera courses/Data Science Specialization/Statistical Inference/projectcode.R')
g
x <- rnorm(1000, mean=4.98, sd=0.80)
df2 <- data.frame(cond=rep(2, 1000), x)
head(df2)
merge(df, df2, by=cond)
merge(df, df2)
expdf <- merge(df, df2)
expdf <- merge(df, df2, by="cond")
expdf2 <- cbind(df, df2)
expdf3 <- rbind(df, df2)
names(df)
names(df2)
expdf3 <- rbind(df, df2, by="cond")
?rbind()
?merge()
df$means <- c(df$means, x)
head(df)
head(df2)
df2 <- data.frame(cond=rep(2, 1000), means=x)
head(df2)
expdf3 <- rbind(df, df2)
head(expdf3)
tail(expdf3)
DF <- rbind(df, df2)
DF$cond <- as.factor(DF$cond)
str(DF)
g2 <- ggplot(DF, aes(x=means, fill=cond)) + geom_histogram(binwidth=.1, alpha = .5, position="identity")
g2
g
g2
library(datasets)
data(ToothGrowth)
str(ToothGrowth)
table(ToothGrowth$dose)
hist(ToothGrowth$len)
?with
with(ToothGrowth, plot(len~supp))
with(ToothGrowth, plot(len~dose))
with(ToothGrowth, hist(len~dose))
with(ToothGrowth, hist(len, dose))
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
with(ToothGrowth, plot(len~dose))
table(ToothGrowth$supp~ToothGrowth$dose)
apply(ToothGrowth$dose, mean)
?apply()
apply(ToothGrowth, dose, mean)
apply(ToothGrowth~dose, mean)
table(ToothGrowth$dose)
?sapply
head(ToothGrowth)
tail(ToothGrowth)
by(ToothGrowth, supp, mean)
by(ToothGrowth, ToothGrowth$supp, mean)
tapply(ToothGrowth$len, ToothGrowth$supp, mean)
tapply(ToothGrowth$len, ToothGrowth$supp, sd)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
tapply(ToothGrowth$len, ToothGrowth$supp & ToothGrowth$dose, mean)
with(ToothGrowth, tapply(len, list(supp, dose), mean))
with(ToothGrowth, tapply(len, list(supp, dose), sd))
library(ggplot2)
with(ToothGrowth, boxplot(len~supp&dose))
qplot(dose, len, data=ToothGrowth, color=supp))
qplot(dose, len, data=ToothGrowth, color=supp)
means <- with(ToothGrowth, tapply(len, list(supp, dose), mean))
means
stack(means)
?stack
require(stats)
formulat(PlantGrowth)
formula(PlantGrowth)
formula(ToothGrowth)
formula(means)
head(PlantGrowth)
pg <- unstack(PlantGrowth)
pg
g <- ggplot(ToothGrowth, aes(dose, len))
g <- g + geom_box(aes(color=supp))
g <- g + geom_boxplot(aes(color=supp))
g
x <- c(64, 46, 2, 64, 11)
mean(x)
sd(x)
(sd(x))^2
seals <- c(5, 13, 13, 4)
mean(seals)
(sd(seals))^2
var(seals)
3.75^2
4.25^2
4.75^2
14.06+18.06+18.06+22.56
72.72/4
seals
mean(seals)
sd(seals)
4.92^2
var(seals)
snakes <- c(22, 20, 21, 13, 14)
mean(snakes)
var(snakes)
24*74
+64
(24*74+64)/25
source("http://www.openintro.org/stat/data/cdc.R")
str(cdc)
table(cdc$gender)
table(cdc$genhlth)
table(cdc$genhlth/20000)
table(cdc$genhlth)/20000
plot(table(cdc$gender, cdc$smoke100))
under23smoke <- subset(cdc$age < 23 & cdc$smoke100 == 1)
under23smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == 1)
nrow(under23smoke)
boxplot(cdc$BMI, cdc$genhlth)
boxplot(cdc$BMI~cdc$genhlth)
bmi <- (cdc$weight/cdc$height^2)*703
boxplot(bmi~cdc$genhlth)
with(cdc, plot(weight, wtdesire))
getwd()
setwd("~/Documents/Coursera courses/Data Analysis and Statistical Inference/project")
getwd()
download("http://bit.ly/dasi_gss_data", file = gss)
download.file("http://bit.ly/dasi_gss_data", gss, method="curl")
download.file("http://bit.ly/dasi_gss_data", destfile= "gss", method="curl")
dateDownloaded <- date()
load(gss)
load("gss")
gss <- load(url("http://bit.ly/dasi_gss_data"))
str(gss)
load(url("http://bit.ly/dasi_gss_data"))
str(gss)
head(gss$maeduc)
table(gss$maeduc)
barplot(gss$maeduc)
barplot(table(gss$maeduc))
str(gss$getahead)
table(gss$getahead)
plot(gss$getahead~gss$gender)
plot(gss$getahead~gss$sex)
table(gss$getahead)/nrow(gss)
table(gss$getahead~gss$sex)/nrow(gss)
table(gss$getahead,gss$sex)/nrow(gss)
table(gss$getahead,gss$sex)
table(gss$year)
bfcrisis <- subset(gss, gss$year >= 2006)
table(bfcrisis$year)
with(bfcrisis, table(getahead, year))
getaheadbf <- with(bfcrisis, table(getahead, year))
str(getaheadbf)
getaheadbf <- as.data.frame(with(bfcrisis, table(getahead, year)))
str(getaheadbf)
head(getaheadbf)
nrow(gss$year==2006)
nrow(gss$year=="2006")
a <- subset(gss$year == "2006")
a <- subset(gss, gss$year == "2006")
table(a$getahead)
table(a$getahead)/nrow(a)
b <- subset(gss, gss$year == "2008")
table(b$getahead)/nrow(b)
c <- subset(gss, gss$year=="2010")
table(c$getahead)/nrow(c)
d <- subset(gss, gss$year=="2012")
table(d$getahead)/nrow(d)
plot(d$getahead, d$sex)
boxplot(d$getahead, d$sex)
boxplot(d$getahead~d$sex)
d$sex <- as.factor(d$sex)
boxplot(d$getahead~d$sex)
d$getahead <- as.factor(d$getahead)
boxplot(d$getahead~d$sex)
str(d$sex)
boxplot(d$getahead,d$sex)
boxplot(table(d$getahead~g$sex))
boxplot(table(d$getahead,g$sex))
boxplot(table(d$getahead,d$sex))
mosaic(table(d$getahead,d$sex))
barplot(table(d$getahead,d$sex))
mosaicplot(table(d$getahead, d$sex))
mosaicplot(table(d$sex, d$getahead))
table(gss$helppoor)
table(d$helppoor)
table(d$helppoor)/nrow(d)
?paste()
yr <- paste("yr", 1998, sep="")
yr
yr = paste("yr", 1998, sep="")
yr
yr <- data.frame()
subsetyear <- function(gss, variable){
load(url("http://bit.ly/dasi_gss_data"))
yr <- subset(gss, gss$year == variable)
}
subsetyear(gss, 2000)
table(gss$year)
mosaicplot(d$getahead, d$union)
mosaicplot(table(d$getahead, d$union))
mosaicplot(table(d$union, d$getahead))
png(filename="getaheadunion.png", width=380, height = 380)
mosaicplot(table(d$union, d$getahead))
dev.off()
getwd()
png(filename="getaheadunion.png", width=500, height = 500)
mosaicplot(table(d$union, d$getahead))
dev.off()
png(filename="getaheadunion.png", width=750, height = 750)
mosaicplot(table(d$union, d$getahead))
dev.off()
table(d$union, d$getahead)
